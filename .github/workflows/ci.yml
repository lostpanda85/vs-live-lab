name: Continuous Integration

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main ]

env:
  DOTNET_NOLOGO: true
  DOTNET_CLI_TELEMETRY_OPTOUT: true

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
        
    - name: Restore dependencies
      run: dotnet restore src/AIConsoleApp/AIConsoleApp.csproj
      
    - name: Build application
      run: dotnet build src/AIConsoleApp/AIConsoleApp.csproj --no-restore --configuration Release
      
    - name: Run tests
      run: dotnet test src/AIConsoleApp/AIConsoleApp.csproj --no-build --configuration Release --verbosity normal
      
    - name: Publish application
      run: dotnet publish src/AIConsoleApp/AIConsoleApp.csproj --no-build --configuration Release --output ./publish
      
    - name: Upload build artifacts
      uses: actions/upload-artifact@v4
      with:
        name: published-app
        path: ./publish
    
    - name: Run security scan
      if: github.event_name == 'pull_request'
      run: echo "Security scanning would run here"
      
    - name: Deploy to staging
      if: github.ref == 'refs/heads/main' && github.event_name == 'push'
      run: echo "Deployment to staging would happen here"
    
  ai-app-build:
    runs-on: ubuntu-latest
    needs: build  # Run after console app build
  
    steps:
    - uses: actions/checkout@v4
  
    - name: Setup .NET
      uses: actions/setup-dotnet@v4
      with:
        dotnet-version: '9.0.x'
  
    - name: Install .NET Aspire workload
      run: dotnet workload install aspire
  
    - name: Restore AI App
      run: dotnet restore src/AIChat/**/*.csproj
  
    - name: Build AI App
      run: dotnet build src/AIChat/**/*.csproj --no-restore --configuration Release
  
    - name: Publish AI App
      run: dotnet publish src/AIChat/**/*.csproj --no-build --configuration Release